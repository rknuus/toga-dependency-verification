#!/bin/bash

set -eo pipefail

PROJECT_DIRECTORY="$1"
if [[ "${PROJECT_DIRECTORY}" == "" ]]; then
  echo "Error: no project directory parameter defined."
  exit 1
fi

# make sure the docker build command is not blocked by interactions
export DEBIAN_FRONTEND=noninteractive

# install helpers to debug the setup for convenience, not strictly required
apt install --yes --no-install-recommends vim

# git is required to checkout the toga repository in the user script
apt install --yes --no-install-recommends git

# I don't understand why, but without this line indirect dependency
# ca-certificates can't be found and fails Docker container build.
apt update

# install prerequisites not explicitly listed in the tutorial, because they can
# be reasonably assumed to be installed by the user
apt install --yes --no-install-recommends python3 python3-pip python3-venv

# insights from my tests:
# - example browser.py requires gir1.2-webkit2-4.0 on Ubuntu 18.04 and 20.04
#   (before 17.04 the line `gi.require_version('WebKit2', version)` in
#   src/gtk/toga_gtk/libs/gtk.py would have to be "WebKit" instead of "WebKit2",
#   see https://stackoverflow.com/questions/7823972/cant-import-webkit-from-gi-repository)
# - libwebkit2gtk-4.0-37 also works for both Ubuntu 18.04 and 20.04
# - without python3-dev `pip3 install pycairo` would fail
apt install --yes --no-install-recommends python3-dev libgirepository1.0-dev libcairo2-dev libpango1.0-dev libwebkit2gtk-4.0-37 gir1.2-webkit2-4.0

# Set up a regular user for more realistic conditions, because certain commands
# behave different as root. Possibly not necessary, but just to be sure.
#
# The password hash was generated by: openssl passwd -1 "togatest"
# see https://blog.sleeplessbeastie.eu/2015/09/28/how-to-programmatically-create-system-user-with-defined-password/
#
# pass the password hash like in https://stackoverflow.com/a/61603505/1776679
useradd -ms /bin/bash -p '$1$Z0Ri1XrC$h3KoP0dHO5IGTlE4nhX7n1' user

# create the project directory ourselves so that we can pass ownership to user
mkdir -p "${PROJECT_DIRECTORY}"
chown user:user "${PROJECT_DIRECTORY}"